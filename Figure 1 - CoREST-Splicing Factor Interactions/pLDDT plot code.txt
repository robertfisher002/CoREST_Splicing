import json
import matplotlib.pyplot as plt
import numpy as np

# common file path
base_path = '/content/fold_20240909_u2af2_241_471_tr_lc_rna_with_tag_full_data_'

# file path
file_path = f"{base_path}0.json"

# Amino acid sequence
protein_sequence = "MGSSHHHHHHSSGENLYFQGGNPSVYVPGVVSTVVPDSAHKLFIGGLPNYLNDDQVKELLTSFGPLKAFNLVKDSATGLSKGYAFCEYVDINVTDQAIAGLNGMQLGDKKLLVQRASVGAKNATLSTINQTPVTLQVPGLMSSQVQMGGHPTEVLCLMNMVLPEELLDDEEYEEIVEDVRDECSKYGLVKSIEIPRPVDGVEVPGCGKIFVEFTSVFDCQKAMQGLTGRKFANRVVVTKYCDPDSYHRRDFWMGSSHHHHHHSSGENLYFQGGPSGVEGAAFQSRLPHDRMTSQEAACFPDIISGPQQTQKVFLFIRNRTLQLWLDNPKIQLTFEATLQQLEAPYNSDTVLVHRVHSYLERHGLINFGIYKRIKPLPTKKTGKVIIIGSGVSGLAAARQLQSFGMDVTLLEARDRVGGRVATFRKGNYVADLGAMVVTGLGGNPMAVVSKQVNMELAKIKQKCPLYEANGQAVPKEKDEMVEQEFNRLLEATSYLSHQLDFNVLNNKPVSLGQALEVVIQLQEKHVKDEQIEHWKKIVKTQEELKELLNKMVNLKEKIKELHQQYKEASEVKPPRDITAEFLVKSKHRDLTALCKEYDELAETQGKLEEKLQELEANPPSDVYLSSRDRQILDWHFANLEFANATPLSTLSLKHWDQDDDFEFTGSHLTVRNGYSCVPVALAEGLDIKLNTAVRQVRYTASGCEVIAVNTRSTSQTFIYKCDAVLCTLPLGVLKQQPPAVQFVPPLPEWKTSAVQRMGFGNLNKVVLCFDRVFWDPSVNLFGHVGSTTASRGELFLFWNLYKAPILLALVAGEAAGIMENISDDVIVGRCLAILKGIFGSSAVPQPKETVVSRWRADPWARGSYSYVAAGSSGNDYDLMAQPITPGPSIPGAPQPIPRLFFAGEHTIRNYPATVHGALLSGLREAGRIADQFLGAMYTLPRQATPGVPAQQSPSMMGSSHHHHHHSSGLVPRGSHMASMTGGQQMGENLYFQGGPTETVPQVKKEKHSTQAKNRAKRKPPKGMFLSQEDVEAVSANATAATTVLRQLDMELVSVKRQIQNIKQTNSALKEKLDGGIEPYRLPEVIQKCNARWTTEEQLLAVQAIRKYGRDFQAISDVIGNKSVVQVKNFFVNYRRRFNIDEVLQEWEAEHGKEETNGPSNQKPVKSPDNSIKMPEEEDEAPVLDVRYASAS"
num_residues = len(protein_sequence)

# Loading file and atom_pLDDT extraction
with open(file_path) as f:
    data = json.load(f)
    atom_plddt_values = data['atom_plddts']  # pLDDT for each atoms

# Average pLDDT by amino acids
split_plddt_values = np.array_split(atom_plddt_values, num_residues)
amino_acid_plddt_values = [np.mean(split) for split in split_plddt_values]

# Amino acid index
residue_indices = range(num_residues)

# plot setting
plt.figure(figsize=(10, 6))

# Drawing pLDDT plot
plt.plot(residue_indices, amino_acid_plddt_values, linewidth=1)


# label and title
plt.xlabel('Residues')
plt.ylabel('Predicted LDDT')
plt.title('Predicted LDDT (U2AF2/LSD1/RCOR1)')

# Removing gride
plt.grid(False)

# show plot
plt.show()
